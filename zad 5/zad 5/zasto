#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#define MAX_SIZE 50
#define MAX_LINE 1024
typedef struct student* pozicija;
typedef struct student student;
struct student
{
	int mb;
	int god;
	pozicija next;
};
pozicija dodajHead();
void ucitajFile(pozicija, char*);
pozicija dodajDrugiNaPrvi(pozicija, pozicija);
void ispis(pozicija);

int main() {
	pozicija head1 = NULL;
	head1 = dodajHead();
	pozicija head2 = NULL;
	head2 = dodajHead();
	pozicija zbroj = NULL;
	zbroj = dodajHead();
	char* ime1 = "1.txt";
	char* ime2 = "2.txt";
	ucitajFile(head1, ime1);
	ucitajFile(head2, ime2);
	ispis(head1->next);
	ispis(head2->next);
	zbroj = dodajDrugiNaPrvi(head1, head2);
	ispis(zbroj->next);


	return 0;
}
pozicija dodajHead() {
	pozicija q = NULL;
	q = (pozicija)malloc(sizeof(student));
	
	if (q == NULL)
	{
		printf("\nkrivo alocirana memorija");
		return -1;
	}
	q->next = NULL;
	q->god = 0;
	q->mb = 0;
	return q;


}
void ucitajFile(pozicija p, char* ime) {
	FILE* fp = NULL;
	fp = fopen(ime, "r");
	pozicija q;

	
	while (!feof(fp)) {
		q = dodajHead();
		fscanf(fp, "%d %d\n", &q->mb, &q->god);
		//printf("\n%d %d", q->mb, q->god);
		q->next = NULL;
		p->next = q;
		p = p->next;
		
	}

	fclose(fp);
}
pozicija dodajDrugiNaPrvi(pozicija p, pozicija q) {
	pozicija sve = NULL;
	sve = p;
	q = q->next;
	while (p->next != NULL) {
		p = p->next;
	}
	while (q != NULL) {
		p->next = q;
		q = q->next;
		p = p->next;
	}
	return sve;
}
void ispis(pozicija p) {
	int i = 1;
	while (p != NULL) {
		printf("%d. maticni broj:%d godina rodenja:%d\n", i, p->mb, p->god);
		i++;
		p = p->next;
	}
	printf("\n\n\n");
}
